name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Run on pushes to the main branch
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        env:
          FLASK_ENV: testing  # Ensure test config is used
          PYTHONPATH: .
        run: pytest --disable-warnings

  build_and_deploy:
    runs-on: ubuntu-latest
    needs: test  # This ensures tests pass before building

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        env:
          DOCKER_USER: ${{ vars.DOCKERHUB_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ vars.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and tag Docker image
        run: |
          docker build -t communication-service:latest .
          docker tag communication-service:latest emelalkim/communication-service:latest

      - name: Push Docker image to Docker Hub
        run: docker push emelalkim/communication-service:latest

      - name: Deploy Docker container locally
        run: |
          docker run -d -p 5000:5000 communication-service:latest

      - name: Test Docker container
        run: curl http://localhost:5000/messageLog
